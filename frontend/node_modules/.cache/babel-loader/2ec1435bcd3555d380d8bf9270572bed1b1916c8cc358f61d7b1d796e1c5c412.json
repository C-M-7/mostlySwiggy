{"ast":null,"code":"var _jsxFileName = \"E:\\\\mostlySwiggy\\\\frontend\\\\src\\\\Components\\\\mainPage\\\\LSidebar.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport FetchLocation from \"../../Config/FetchLocation\";\nimport { useDispatch } from \"react-redux\";\nimport { setuserlocation } from \"../../Redux/slices/UserLocation\";\nimport FetchData from \"../../Config/FetchData\";\nimport { setRestaurantData } from \"../../Redux/slices/RestaurantsData\";\nimport { setRestaurantCuisines } from \"../../Redux/slices/RestaurantsCuisines\";\nimport { toast } from \"sonner\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LSidebar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const getUserData = async location => {\n    const response = await FetchData(location);\n    toast.info(\"Your Location is in use!\", {\n      style: {\n        background: \"yellow\",\n        fontSize: \"17px\"\n      }\n    });\n    const cuisineSet = new Set();\n    response.map(res => res.cuisines.map(cus => cuisineSet.add(cus)));\n    const cuisineArr = [...cuisineSet];\n    dispatch(setRestaurantCuisines(cuisineArr));\n    dispatch(setRestaurantData(response));\n    if (response) navigate(\"/\");\n  };\n  const getUserLocation = async () => {\n    try {\n      const location = await FetchLocation();\n      dispatch(setuserlocation(location));\n      getUserData(location);\n    } catch (err) {\n      toast.error(\"Unable to fetch your location!\", {\n        style: {\n          background: \"red\",\n          fontSize: \"17px\"\n        }\n      });\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center mt-[15%]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-10 text-2xl font-bold\",\n        children: \"Click the button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border border-black p-4 rounded-md hover:oran\",\n          onClick: getUserLocation,\n          children: \"Get My Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LSidebar, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LSidebar;\nexport default LSidebar;\nvar _c;\n$RefreshReg$(_c, \"LSidebar\");","map":{"version":3,"names":["React","FetchLocation","useDispatch","setuserlocation","FetchData","setRestaurantData","setRestaurantCuisines","toast","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LSidebar","_s","dispatch","navigate","getUserData","location","response","info","style","background","fontSize","cuisineSet","Set","map","res","cuisines","cus","add","cuisineArr","getUserLocation","err","error","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/mostlySwiggy/frontend/src/Components/mainPage/LSidebar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport FetchLocation from \"../../Config/FetchLocation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setuserlocation } from \"../../Redux/slices/UserLocation\";\r\nimport FetchData from \"../../Config/FetchData\";\r\nimport { setRestaurantData } from \"../../Redux/slices/RestaurantsData\";\r\nimport { setRestaurantCuisines } from \"../../Redux/slices/RestaurantsCuisines\";\r\nimport { toast } from \"sonner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LSidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const getUserData = async (location) => {\r\n    const response = await FetchData(location);\r\n    toast.info(\"Your Location is in use!\", {\r\n      style: { background: \"yellow\", fontSize: \"17px\" },\r\n    });\r\n\r\n    const cuisineSet = new Set();\r\n    response.map((res) => res.cuisines.map((cus) => cuisineSet.add(cus)));\r\n    const cuisineArr = [...cuisineSet];\r\n\r\n    dispatch(setRestaurantCuisines(cuisineArr));\r\n    dispatch(setRestaurantData(response));\r\n    if (response) navigate(\"/\");\r\n  };\r\n\r\n  const getUserLocation = async () => {\r\n    try {\r\n      const location = await FetchLocation();\r\n      dispatch(setuserlocation(location));\r\n      getUserData(location);\r\n    } catch (err) {\r\n      toast.error(\"Unable to fetch your location!\", {\r\n        style: { background: \"red\", fontSize: \"17px\" },\r\n      });\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center mt-[15%]\">\r\n        <div className=\"p-10 text-2xl font-bold\">Click the button</div>\r\n        <div>\r\n          <button className=\"border border-black p-4 rounded-md hover:oran\" onClick={getUserLocation}>\r\n            Get My Location\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}