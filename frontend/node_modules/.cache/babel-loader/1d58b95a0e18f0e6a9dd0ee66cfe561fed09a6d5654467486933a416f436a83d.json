{"ast":null,"code":"import{isMobile}from\"react-device-detect\";async function fetchData(location){const{latitude,longitude}=location;const url=isMobile?\"https://thingproxy-760k.onrender.com/fetch/https://www.swiggy.com/mapi/homepage/getCards?lat=\".concat(latitude,\"&lng=\").concat(longitude):\"https://thingproxy-760k.onrender.com/fetch/https://www.swiggy.com/dapi/restaurants/list/v5?lat=\".concat(latitude,\"&lng=\").concat(longitude,\"&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\");try{var _desiredCard$gridWidg,_desiredCard$gridWidg2,_desiredCard$gridWidg3,_desiredCard$card,_desiredCard$card$car,_desiredCard$card$car2,_desiredCard$card$car3;const response=await fetch(url);if(!response.ok){throw new Error('Failed to fetch data from Swiggy API');}const responseData=await response.json();console.log('Response Data:',responseData);const cards=isMobile?responseData.data.success.cards:responseData.data.cards;// const locUnavailable = isMobile\n//         ? cards.find(\n//               (card) =>\n//                   card.gridWidget &&\n//                   card.gridWidget.gridElements &&\n//                   card.gridWidget.gridElements.infoWithStyle[\"@type\"] ===\n//                       \"type.googleapis.com/swiggy.seo.widgets.v1.SwiggyNotPresent\",\n//           )\n//         : cards.find(\n//               (card) =>\n//                   card.card &&\n//                   card.card.card &&\n//                   card.card.card[\"@type\"] ===\n//                       \"type.googleapis.com/swiggy.seo.widgets.v1.SwiggyNotPresent\",\n//           );\nconst desiredCard=isMobile?cards.find(card=>card.gridWidget&&card.gridWidget.gridElements&&card.gridWidget.gridElements.infoWithStyle[\"@type\"]===\"type.googleapis.com/swiggy.presentation.food.v2.RestaurantInfoWithStyle\"):cards.find(card=>card.card&&card.card.card&&card.card.card.gridElements&&card.card.card.gridElements.infoWithStyle&&card.card.card.gridElements.infoWithStyle[\"@type\"]===\"type.googleapis.com/swiggy.presentation.food.v2.FavouriteRestaurantInfoWithStyle\");const restaurants=isMobile?desiredCard===null||desiredCard===void 0?void 0:(_desiredCard$gridWidg=desiredCard.gridWidget)===null||_desiredCard$gridWidg===void 0?void 0:(_desiredCard$gridWidg2=_desiredCard$gridWidg.gridElements)===null||_desiredCard$gridWidg2===void 0?void 0:(_desiredCard$gridWidg3=_desiredCard$gridWidg2.infoWithStyle)===null||_desiredCard$gridWidg3===void 0?void 0:_desiredCard$gridWidg3.restaurants:desiredCard===null||desiredCard===void 0?void 0:(_desiredCard$card=desiredCard.card)===null||_desiredCard$card===void 0?void 0:(_desiredCard$card$car=_desiredCard$card.card)===null||_desiredCard$card$car===void 0?void 0:(_desiredCard$card$car2=_desiredCard$card$car.gridElements)===null||_desiredCard$card$car2===void 0?void 0:(_desiredCard$card$car3=_desiredCard$card$car2.infoWithStyle)===null||_desiredCard$card$car3===void 0?void 0:_desiredCard$card$car3.restaurants;const filteredDetails=restaurants.map(shop=>{const{id,name,cuisines,avgRatingString,sla,cloudinaryImageId,veg,costForTwo}=shop.info;const{deliveryTime}=sla;return{id,name,cuisines,avgRatingString,deliveryTime,cloudinaryImageId,veg,costForTwo};});console.log(\"hi\");return filteredDetails;// Returning the parsed JSON data\n}catch(error){console.error('Error fetching data:',error.message);throw error;}}export default fetchData;","map":{"version":3,"names":["isMobile","fetchData","location","latitude","longitude","url","concat","_desiredCard$gridWidg","_desiredCard$gridWidg2","_desiredCard$gridWidg3","_desiredCard$card","_desiredCard$card$car","_desiredCard$card$car2","_desiredCard$card$car3","response","fetch","ok","Error","responseData","json","console","log","cards","data","success","desiredCard","find","card","gridWidget","gridElements","infoWithStyle","restaurants","filteredDetails","map","shop","id","name","cuisines","avgRatingString","sla","cloudinaryImageId","veg","costForTwo","info","deliveryTime","error","message"],"sources":["E:/mostlySwiggy/frontend/src/Config/FetchData.js"],"sourcesContent":["import { isMobile } from \"react-device-detect\";\r\n\r\nasync function fetchData(location) {\r\n    const { latitude, longitude } = location;\r\n    const url = isMobile\r\n                ? `https://thingproxy-760k.onrender.com/fetch/https://www.swiggy.com/mapi/homepage/getCards?lat=${latitude}&lng=${longitude}`\r\n                : `https://thingproxy-760k.onrender.com/fetch/https://www.swiggy.com/dapi/restaurants/list/v5?lat=${latitude}&lng=${longitude}&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data from Swiggy API');\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        console.log('Response Data:', responseData);\r\n\r\n        const cards = isMobile ? responseData.data.success.cards : responseData.data.cards;\r\n\r\n        // const locUnavailable = isMobile\r\n        //         ? cards.find(\r\n        //               (card) =>\r\n        //                   card.gridWidget &&\r\n        //                   card.gridWidget.gridElements &&\r\n        //                   card.gridWidget.gridElements.infoWithStyle[\"@type\"] ===\r\n        //                       \"type.googleapis.com/swiggy.seo.widgets.v1.SwiggyNotPresent\",\r\n        //           )\r\n        //         : cards.find(\r\n        //               (card) =>\r\n        //                   card.card &&\r\n        //                   card.card.card &&\r\n        //                   card.card.card[\"@type\"] ===\r\n        //                       \"type.googleapis.com/swiggy.seo.widgets.v1.SwiggyNotPresent\",\r\n        //           );\r\n\r\n        const desiredCard = isMobile\r\n                ? cards.find(\r\n                      (card) =>\r\n                          card.gridWidget &&\r\n                          card.gridWidget.gridElements &&\r\n                          card.gridWidget.gridElements.infoWithStyle[\"@type\"] ===\r\n                              \"type.googleapis.com/swiggy.presentation.food.v2.RestaurantInfoWithStyle\",\r\n                  )\r\n                : cards.find(\r\n                      (card) =>\r\n                          card.card &&\r\n                          card.card.card &&\r\n                          card.card.card.gridElements &&\r\n                          card.card.card.gridElements.infoWithStyle &&\r\n                          card.card.card.gridElements.infoWithStyle[\"@type\"] ===\r\n                              \"type.googleapis.com/swiggy.presentation.food.v2.FavouriteRestaurantInfoWithStyle\",\r\n                  );\r\n\r\n        const restaurants = isMobile\r\n                  ? desiredCard?.gridWidget?.gridElements?.infoWithStyle?.restaurants\r\n                  : desiredCard?.card?.card?.gridElements?.infoWithStyle?.restaurants;\r\n\r\n        const filteredDetails = restaurants.map((shop) => {\r\n            const {\r\n                id,\r\n                name,\r\n                cuisines,\r\n                avgRatingString,\r\n                sla,\r\n                cloudinaryImageId,\r\n                veg,\r\n                costForTwo,\r\n            } = shop.info;\r\n            const { deliveryTime } = sla;\r\n            return {\r\n                id,\r\n                name,\r\n                cuisines,\r\n                avgRatingString,\r\n                deliveryTime,\r\n                cloudinaryImageId,\r\n                veg,\r\n                costForTwo,\r\n            };\r\n        });\r\n        console.log(\"hi\");\r\n        return filteredDetails; // Returning the parsed JSON data\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport default fetchData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}