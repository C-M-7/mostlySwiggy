{"ast":null,"code":"var _jsxFileName = \"E:\\\\mostlySwiggy\\\\frontend\\\\src\\\\Components\\\\mainPage\\\\LSidebar.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport FetchLocation from \"../../Config/FetchLocation\";\nimport { useDispatch } from \"react-redux\";\nimport { setuserlocation } from \"../../Redux/slices/UserLocation\";\nimport FetchData from \"../../Config/FetchData\";\nimport { setRestaurantData } from \"../../Redux/slices/RestaurantsData\";\nimport { setRestaurantCuisines } from \"../../Redux/slices/RestaurantsCuisines\";\nimport { toast } from \"sonner\";\n// import Loader from \"../loader/Loader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LSidebar = () => {\n  _s();\n  const dispatch = useDispatch();\n  // const [loader, setLoader] = useState(false);\n\n  const getUserData = async location => {\n    const response = await FetchData(location);\n    // if(response) setLoader(false);\n    toast.info('Your Location is in use!', {\n      style: {\n        background: 'yellow',\n        fontSize: '17px'\n      }\n    });\n\n    // Set up for storing different cuisines in redux\n    const cuisineSet = new Set();\n    response.map(res => res.cuisines.map(cus => cuisineSet.add(cus)));\n    const cuisineArr = [...cuisineSet];\n    dispatch(setRestaurantCuisines(cuisineArr));\n    dispatch(setRestaurantData(response));\n\n    // if(response) isClose();\n  };\n  const getUserLocation = async () => {\n    try {\n      // setLoader(true);\n      const location = await FetchLocation();\n      dispatch(setuserlocation(location));\n      getUserData(location);\n    } catch (err) {\n      toast.error('Unable to fetch your location!', {\n        style: {\n          background: 'red',\n          fontSize: '17px'\n        }\n      });\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Click the button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border border-black\",\n          onClick: getUserLocation,\n          children: \"Get My Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LSidebar, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = LSidebar;\nexport default LSidebar;\nvar _c;\n$RefreshReg$(_c, \"LSidebar\");","map":{"version":3,"names":["React","FetchLocation","useDispatch","setuserlocation","FetchData","setRestaurantData","setRestaurantCuisines","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","LSidebar","_s","dispatch","getUserData","location","response","info","style","background","fontSize","cuisineSet","Set","map","res","cuisines","cus","add","cuisineArr","getUserLocation","err","error","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/mostlySwiggy/frontend/src/Components/mainPage/LSidebar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport FetchLocation from \"../../Config/FetchLocation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setuserlocation } from \"../../Redux/slices/UserLocation\";\r\nimport FetchData from \"../../Config/FetchData\";\r\nimport { setRestaurantData } from \"../../Redux/slices/RestaurantsData\";\r\nimport { setRestaurantCuisines } from \"../../Redux/slices/RestaurantsCuisines\";\r\nimport { toast } from \"sonner\";\r\n// import Loader from \"../loader/Loader\";\r\n\r\nconst LSidebar = () => {\r\n  const dispatch = useDispatch();\r\n  // const [loader, setLoader] = useState(false);\r\n  \r\n  const getUserData = async (location) =>{\r\n    const response = await FetchData(location);\r\n    // if(response) setLoader(false);\r\n    toast.info('Your Location is in use!',{style:{background: 'yellow', fontSize: '17px'}})\r\n\r\n    // Set up for storing different cuisines in redux\r\n    const cuisineSet = new Set();\r\n    response.map((res)=>res.cuisines.map((cus)=> cuisineSet.add(cus)));\r\n    const cuisineArr = [...cuisineSet];\r\n\r\n    dispatch(setRestaurantCuisines(cuisineArr));\r\n    dispatch(setRestaurantData(response));\r\n    \r\n    // if(response) isClose();\r\n  }\r\n\r\n  const getUserLocation = async () =>{\r\n    try{\r\n      // setLoader(true);\r\n      const location = await FetchLocation();\r\n      dispatch(setuserlocation(location));\r\n      getUserData(location);\r\n    }\r\n    catch(err){\r\n      toast.error('Unable to fetch your location!',{style:{background: 'red', fontSize: '17px'}});\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center\">\r\n        <div>\r\n          Click the button \r\n        </div>\r\n        <div>\r\n          <button className='border border-black' onClick={getUserLocation}>Get My Location</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  };\r\n\r\nexport default LSidebar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,iCAAiC;AACjE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,SAASC,qBAAqB,QAAQ,wCAAwC;AAC9E,SAASC,KAAK,QAAQ,QAAQ;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B;;EAEA,MAAMa,WAAW,GAAG,MAAOC,QAAQ,IAAI;IACrC,MAAMC,QAAQ,GAAG,MAAMb,SAAS,CAACY,QAAQ,CAAC;IAC1C;IACAT,KAAK,CAACW,IAAI,CAAC,0BAA0B,EAAC;MAACC,KAAK,EAAC;QAACC,UAAU,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAM;IAAC,CAAC,CAAC;;IAEvF;IACA,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5BN,QAAQ,CAACO,GAAG,CAAEC,GAAG,IAAGA,GAAG,CAACC,QAAQ,CAACF,GAAG,CAAEG,GAAG,IAAIL,UAAU,CAACM,GAAG,CAACD,GAAG,CAAC,CAAC,CAAC;IAClE,MAAME,UAAU,GAAG,CAAC,GAAGP,UAAU,CAAC;IAElCR,QAAQ,CAACR,qBAAqB,CAACuB,UAAU,CAAC,CAAC;IAC3Cf,QAAQ,CAACT,iBAAiB,CAACY,QAAQ,CAAC,CAAC;;IAErC;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAW;IACjC,IAAG;MACD;MACA,MAAMd,QAAQ,GAAG,MAAMf,aAAa,CAAC,CAAC;MACtCa,QAAQ,CAACX,eAAe,CAACa,QAAQ,CAAC,CAAC;MACnCD,WAAW,CAACC,QAAQ,CAAC;IACvB,CAAC,CACD,OAAMe,GAAG,EAAC;MACRxB,KAAK,CAACyB,KAAK,CAAC,gCAAgC,EAAC;QAACb,KAAK,EAAC;UAACC,UAAU,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAM;MAAC,CAAC,CAAC;MAC3FY,OAAO,CAACD,KAAK,CAACD,GAAG,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA;MAAK2B,SAAS,EAAC,2CAA2C;MAAAD,QAAA,gBACxD1B,OAAA;QAAA0B,QAAA,EAAK;MAEL;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAQ2B,SAAS,EAAC,qBAAqB;UAACK,OAAO,EAAEX,eAAgB;UAAAK,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEL,CAAC;AAAC3B,EAAA,CA7CED,QAAQ;EAAA,QACKV,WAAW;AAAA;AAAAwC,EAAA,GADxB9B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}